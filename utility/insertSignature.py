# -*- coding: utf-8 -*-
"""
Created on Sat Jan 11 22:45:42 2020

@author: b9903
"""
from .getStringImg_20 import getStringImg_20
from .imshow import imshow
from .getImgSize import getImgSize
import matplotlib.pyplot as plt
import numpy as np
from skimage import transform

def insertSignature(img, featVer='0.0.1', kernelVer='0.0.1-0', autherName='MCHSIAOJ', loc='R'):
    featureVerImg_bw = getVerImg_bw('Feature Ver.: %s'%(featVer))
    kernelVerStringImg_bw = getVerImg_bw('Kernel Ver.: %s'%(kernelVer))
    signatureImg_bw = getSigImg_bw(autherName)
    
    jetColors = getJetColors()
    imgH, imgW, imgZ = getImgSize(img)
    
    featureVerImg_jet = getColorMapBackground(featureVerImg_bw, jetColors)
    kernelVerStringImg_jet = getColorMapBackground(kernelVerStringImg_bw, jetColors)
    signatureImg_jet = getColorMapBackground(signatureImg_bw, jetColors, isShift=True)
    
    imgH_f, imgW_f, imgZ_f = getImgSize(featureVerImg_bw)
    imgH_k, imgW_k, imgZ_k = getImgSize(kernelVerStringImg_bw)
    imgH_s, imgW_s, imgZ_s = getImgSize(signatureImg_bw)
    if loc == 'R':
        yStart = (imgH-1) - imgH_s + 1
        yEnd = yStart + imgH_s - 1
        xStart = (imgW-1) - imgW_s + 1
        xEnd = imgW-1
        img = insertHighLightImgByRange(img, signatureImg_bw,signatureImg_jet,yStart,yEnd,xStart,xEnd)
        yStart = yStart - imgH_k + 1
        yEnd = yStart + imgH_k - 1
        xStart = (imgW-1) - imgW_k + 1
        xEnd = imgW-1
        img = insertHighLightImgByRange(img, kernelVerStringImg_bw,kernelVerStringImg_jet,yStart,yEnd,xStart,xEnd)
        yStart = yStart - imgH_f + 1
        yEnd = yStart + imgH_f - 1
        xStart = (imgW-1) - imgW_f + 1
        xEnd = imgW-1
        img = insertHighLightImgByRange(img, featureVerImg_bw,featureVerImg_jet,yStart,yEnd,xStart,xEnd)
    else:
        yStart = (imgH-1) - imgH_s + 1
        yEnd = yStart + imgH_s - 1
        xStart = 0
        xEnd = xStart + imgW_s - 1
        img = insertHighLightImgByRange(img, signatureImg_bw,signatureImg_jet,yStart,yEnd,xStart,xEnd)
        yStart = yStart - imgH_k + 1
        yEnd = yStart + imgH_k - 1
        xStart = 0
        xEnd = xStart + imgW_k - 1
        img = insertHighLightImgByRange(img, kernelVerStringImg_bw,kernelVerStringImg_jet,yStart,yEnd,xStart,xEnd)
        yStart = yStart - imgH_f + 1
        yEnd = yStart + imgH_f - 1
        xStart = 0
        xEnd = xStart + imgW_f - 1
        img = insertHighLightImgByRange(img, featureVerImg_bw,featureVerImg_jet,yStart,yEnd,xStart,xEnd)
    
    return img

def insertHighLightImgByRange(img, signatureImg_bw,signatureImg_jet,yStart,yEnd,xStart,xEnd):
    
    img_sub = img[yStart:yEnd+1, xStart:xEnd+1, :]
    img_sub[signatureImg_bw, :] = signatureImg_jet[signatureImg_bw, :]
    img[yStart:yEnd+1, xStart:xEnd+1, :] = img_sub
    return img


def getColorMapBackground(img_bw, jetColors, isShift=False):
    imgH, imgW = img_bw.shape
    colorMapBackground = np.tile(jetColors, (imgH, 1, 1))
    
    if isShift:
        for y in range(imgH):
            colorMapBackground[y,:,:] = np.roll(colorMapBackground[y,:,:], y*5, axis=0)
          
    colorMapBackground = transform.resize(colorMapBackground, (imgH, imgW))
#    imshow(colorMapBackground)
    colorMapBackground = (colorMapBackground*255).astype(np.uint8)
    return colorMapBackground

def getSigImg_bw(autherName):
    sigImg_bw_pre = getStringImg_20(autherName)
    sigImg_bw_pre = np.pad(sigImg_bw_pre, ((1,1), (1,1)), 'constant')
    sigImg_bw_pre = np.pad(sigImg_bw_pre, ((1,1), (1,1)), 'constant', constant_values = True)
    sigImg_bw_post = getStringImg_20('DESIGNED')
    sigImg_bw_post = np.invert(sigImg_bw_post)
    sigImg_bw_post = np.pad(sigImg_bw_post, ((1,1), (1,1)), 'constant', constant_values = True)
    sigImg_bw_post = np.pad(sigImg_bw_post, ((1,1), (1,1)), 'constant', constant_values = True)
    
    signatureImg_bw = np.hstack((sigImg_bw_pre, sigImg_bw_post))
#    plt.imshow(signatureImg_bw)
    
    return signatureImg_bw

def getVerImg_bw(inputStr):
    verImg_bw = getStringImg_20(inputStr)
    return verImg_bw

def getJetColors():
    jetColors = np.array([[[0.00000000e+00, 0.00000000e+00, 5.00000000e-01],
        [0.00000000e+00, 0.00000000e+00, 5.17825312e-01],
        [0.00000000e+00, 0.00000000e+00, 5.35650624e-01],
        [0.00000000e+00, 0.00000000e+00, 5.53475936e-01],
        [0.00000000e+00, 0.00000000e+00, 5.71301248e-01],
        [0.00000000e+00, 0.00000000e+00, 5.89126560e-01],
        [0.00000000e+00, 0.00000000e+00, 6.06951872e-01],
        [0.00000000e+00, 0.00000000e+00, 6.24777184e-01],
        [0.00000000e+00, 0.00000000e+00, 6.42602496e-01],
        [0.00000000e+00, 0.00000000e+00, 6.60427807e-01],
        [0.00000000e+00, 0.00000000e+00, 6.78253119e-01],
        [0.00000000e+00, 0.00000000e+00, 6.96078431e-01],
        [0.00000000e+00, 0.00000000e+00, 7.13903743e-01],
        [0.00000000e+00, 0.00000000e+00, 7.31729055e-01],
        [0.00000000e+00, 0.00000000e+00, 7.49554367e-01],
        [0.00000000e+00, 0.00000000e+00, 7.67379679e-01],
        [0.00000000e+00, 0.00000000e+00, 7.85204991e-01],
        [0.00000000e+00, 0.00000000e+00, 8.03030303e-01],
        [0.00000000e+00, 0.00000000e+00, 8.20855615e-01],
        [0.00000000e+00, 0.00000000e+00, 8.38680927e-01],
        [0.00000000e+00, 0.00000000e+00, 8.56506239e-01],
        [0.00000000e+00, 0.00000000e+00, 8.74331551e-01],
        [0.00000000e+00, 0.00000000e+00, 8.92156863e-01],
        [0.00000000e+00, 0.00000000e+00, 9.09982175e-01],
        [0.00000000e+00, 0.00000000e+00, 9.27807487e-01],
        [0.00000000e+00, 0.00000000e+00, 9.45632799e-01],
        [0.00000000e+00, 0.00000000e+00, 9.63458111e-01],
        [0.00000000e+00, 0.00000000e+00, 9.81283422e-01],
        [0.00000000e+00, 0.00000000e+00, 9.99108734e-01],
        [0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
        [0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
        [0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
        [0.00000000e+00, 1.96078431e-03, 1.00000000e+00],
        [0.00000000e+00, 1.76470588e-02, 1.00000000e+00],
        [0.00000000e+00, 3.33333333e-02, 1.00000000e+00],
        [0.00000000e+00, 4.90196078e-02, 1.00000000e+00],
        [0.00000000e+00, 6.47058824e-02, 1.00000000e+00],
        [0.00000000e+00, 8.03921569e-02, 1.00000000e+00],
        [0.00000000e+00, 9.60784314e-02, 1.00000000e+00],
        [0.00000000e+00, 1.11764706e-01, 1.00000000e+00],
        [0.00000000e+00, 1.27450980e-01, 1.00000000e+00],
        [0.00000000e+00, 1.43137255e-01, 1.00000000e+00],
        [0.00000000e+00, 1.58823529e-01, 1.00000000e+00],
        [0.00000000e+00, 1.74509804e-01, 1.00000000e+00],
        [0.00000000e+00, 1.90196078e-01, 1.00000000e+00],
        [0.00000000e+00, 2.05882353e-01, 1.00000000e+00],
        [0.00000000e+00, 2.21568627e-01, 1.00000000e+00],
        [0.00000000e+00, 2.37254902e-01, 1.00000000e+00],
        [0.00000000e+00, 2.52941176e-01, 1.00000000e+00],
        [0.00000000e+00, 2.68627451e-01, 1.00000000e+00],
        [0.00000000e+00, 2.84313725e-01, 1.00000000e+00],
        [0.00000000e+00, 3.00000000e-01, 1.00000000e+00],
        [0.00000000e+00, 3.15686275e-01, 1.00000000e+00],
        [0.00000000e+00, 3.31372549e-01, 1.00000000e+00],
        [0.00000000e+00, 3.47058824e-01, 1.00000000e+00],
        [0.00000000e+00, 3.62745098e-01, 1.00000000e+00],
        [0.00000000e+00, 3.78431373e-01, 1.00000000e+00],
        [0.00000000e+00, 3.94117647e-01, 1.00000000e+00],
        [0.00000000e+00, 4.09803922e-01, 1.00000000e+00],
        [0.00000000e+00, 4.25490196e-01, 1.00000000e+00],
        [0.00000000e+00, 4.41176471e-01, 1.00000000e+00],
        [0.00000000e+00, 4.56862745e-01, 1.00000000e+00],
        [0.00000000e+00, 4.72549020e-01, 1.00000000e+00],
        [0.00000000e+00, 4.88235294e-01, 1.00000000e+00],
        [0.00000000e+00, 5.03921569e-01, 1.00000000e+00],
        [0.00000000e+00, 5.19607843e-01, 1.00000000e+00],
        [0.00000000e+00, 5.35294118e-01, 1.00000000e+00],
        [0.00000000e+00, 5.50980392e-01, 1.00000000e+00],
        [0.00000000e+00, 5.66666667e-01, 1.00000000e+00],
        [0.00000000e+00, 5.82352941e-01, 1.00000000e+00],
        [0.00000000e+00, 5.98039216e-01, 1.00000000e+00],
        [0.00000000e+00, 6.13725490e-01, 1.00000000e+00],
        [0.00000000e+00, 6.29411765e-01, 1.00000000e+00],
        [0.00000000e+00, 6.45098039e-01, 1.00000000e+00],
        [0.00000000e+00, 6.60784314e-01, 1.00000000e+00],
        [0.00000000e+00, 6.76470588e-01, 1.00000000e+00],
        [0.00000000e+00, 6.92156863e-01, 1.00000000e+00],
        [0.00000000e+00, 7.07843137e-01, 1.00000000e+00],
        [0.00000000e+00, 7.23529412e-01, 1.00000000e+00],
        [0.00000000e+00, 7.39215686e-01, 1.00000000e+00],
        [0.00000000e+00, 7.54901961e-01, 1.00000000e+00],
        [0.00000000e+00, 7.70588235e-01, 1.00000000e+00],
        [0.00000000e+00, 7.86274510e-01, 1.00000000e+00],
        [0.00000000e+00, 8.01960784e-01, 1.00000000e+00],
        [0.00000000e+00, 8.17647059e-01, 1.00000000e+00],
        [0.00000000e+00, 8.33333333e-01, 1.00000000e+00],
        [0.00000000e+00, 8.49019608e-01, 1.00000000e+00],
        [0.00000000e+00, 8.64705882e-01, 9.96204934e-01],
        [0.00000000e+00, 8.80392157e-01, 9.83554712e-01],
        [0.00000000e+00, 8.96078431e-01, 9.70904491e-01],
        [9.48766603e-03, 9.11764706e-01, 9.58254269e-01],
        [2.21378874e-02, 9.27450980e-01, 9.45604048e-01],
        [3.47881088e-02, 9.43137255e-01, 9.32953827e-01],
        [4.74383302e-02, 9.58823529e-01, 9.20303605e-01],
        [6.00885515e-02, 9.74509804e-01, 9.07653384e-01],
        [7.27387729e-02, 9.90196078e-01, 8.95003163e-01],
        [8.53889943e-02, 1.00000000e+00, 8.82352941e-01],
        [9.80392157e-02, 1.00000000e+00, 8.69702720e-01],
        [1.10689437e-01, 1.00000000e+00, 8.57052498e-01],
        [1.23339658e-01, 1.00000000e+00, 8.44402277e-01],
        [1.35989880e-01, 1.00000000e+00, 8.31752056e-01],
        [1.48640101e-01, 1.00000000e+00, 8.19101834e-01],
        [1.61290323e-01, 1.00000000e+00, 8.06451613e-01],
        [1.73940544e-01, 1.00000000e+00, 7.93801392e-01],
        [1.86590765e-01, 1.00000000e+00, 7.81151170e-01],
        [1.99240987e-01, 1.00000000e+00, 7.68500949e-01],
        [2.11891208e-01, 1.00000000e+00, 7.55850727e-01],
        [2.24541429e-01, 1.00000000e+00, 7.43200506e-01],
        [2.37191651e-01, 1.00000000e+00, 7.30550285e-01],
        [2.49841872e-01, 1.00000000e+00, 7.17900063e-01],
        [2.62492094e-01, 1.00000000e+00, 7.05249842e-01],
        [2.75142315e-01, 1.00000000e+00, 6.92599620e-01],
        [2.87792536e-01, 1.00000000e+00, 6.79949399e-01],
        [3.00442758e-01, 1.00000000e+00, 6.67299178e-01],
        [3.13092979e-01, 1.00000000e+00, 6.54648956e-01],
        [3.25743201e-01, 1.00000000e+00, 6.41998735e-01],
        [3.38393422e-01, 1.00000000e+00, 6.29348514e-01],
        [3.51043643e-01, 1.00000000e+00, 6.16698292e-01],
        [3.63693865e-01, 1.00000000e+00, 6.04048071e-01],
        [3.76344086e-01, 1.00000000e+00, 5.91397849e-01],
        [3.88994307e-01, 1.00000000e+00, 5.78747628e-01],
        [4.01644529e-01, 1.00000000e+00, 5.66097407e-01],
        [4.14294750e-01, 1.00000000e+00, 5.53447185e-01],
        [4.26944972e-01, 1.00000000e+00, 5.40796964e-01],
        [4.39595193e-01, 1.00000000e+00, 5.28146743e-01],
        [4.52245414e-01, 1.00000000e+00, 5.15496521e-01],
        [4.64895636e-01, 1.00000000e+00, 5.02846300e-01],
        [4.77545857e-01, 1.00000000e+00, 4.90196078e-01],
        [4.90196078e-01, 1.00000000e+00, 4.77545857e-01],
        [5.02846300e-01, 1.00000000e+00, 4.64895636e-01],
        [5.15496521e-01, 1.00000000e+00, 4.52245414e-01],
        [5.28146743e-01, 1.00000000e+00, 4.39595193e-01],
        [5.40796964e-01, 1.00000000e+00, 4.26944972e-01],
        [5.53447185e-01, 1.00000000e+00, 4.14294750e-01],
        [5.66097407e-01, 1.00000000e+00, 4.01644529e-01],
        [5.78747628e-01, 1.00000000e+00, 3.88994307e-01],
        [5.91397849e-01, 1.00000000e+00, 3.76344086e-01],
        [6.04048071e-01, 1.00000000e+00, 3.63693865e-01],
        [6.16698292e-01, 1.00000000e+00, 3.51043643e-01],
        [6.29348514e-01, 1.00000000e+00, 3.38393422e-01],
        [6.41998735e-01, 1.00000000e+00, 3.25743201e-01],
        [6.54648956e-01, 1.00000000e+00, 3.13092979e-01],
        [6.67299178e-01, 1.00000000e+00, 3.00442758e-01],
        [6.79949399e-01, 1.00000000e+00, 2.87792536e-01],
        [6.92599620e-01, 1.00000000e+00, 2.75142315e-01],
        [7.05249842e-01, 1.00000000e+00, 2.62492094e-01],
        [7.17900063e-01, 1.00000000e+00, 2.49841872e-01],
        [7.30550285e-01, 1.00000000e+00, 2.37191651e-01],
        [7.43200506e-01, 1.00000000e+00, 2.24541429e-01],
        [7.55850727e-01, 1.00000000e+00, 2.11891208e-01],
        [7.68500949e-01, 1.00000000e+00, 1.99240987e-01],
        [7.81151170e-01, 1.00000000e+00, 1.86590765e-01],
        [7.93801392e-01, 1.00000000e+00, 1.73940544e-01],
        [8.06451613e-01, 1.00000000e+00, 1.61290323e-01],
        [8.19101834e-01, 1.00000000e+00, 1.48640101e-01],
        [8.31752056e-01, 1.00000000e+00, 1.35989880e-01],
        [8.44402277e-01, 1.00000000e+00, 1.23339658e-01],
        [8.57052498e-01, 1.00000000e+00, 1.10689437e-01],
        [8.69702720e-01, 1.00000000e+00, 9.80392157e-02],
        [8.82352941e-01, 1.00000000e+00, 8.53889943e-02],
        [8.95003163e-01, 1.00000000e+00, 7.27387729e-02],
        [9.07653384e-01, 1.00000000e+00, 6.00885515e-02],
        [9.20303605e-01, 1.00000000e+00, 4.74383302e-02],
        [9.32953827e-01, 1.00000000e+00, 3.47881088e-02],
        [9.45604048e-01, 9.88380537e-01, 2.21378874e-02],
        [9.58254269e-01, 9.73856209e-01, 9.48766603e-03],
        [9.70904491e-01, 9.59331881e-01, 0.00000000e+00],
        [9.83554712e-01, 9.44807553e-01, 0.00000000e+00],
        [9.96204934e-01, 9.30283224e-01, 0.00000000e+00],
        [1.00000000e+00, 9.15758896e-01, 0.00000000e+00],
        [1.00000000e+00, 9.01234568e-01, 0.00000000e+00],
        [1.00000000e+00, 8.86710240e-01, 0.00000000e+00],
        [1.00000000e+00, 8.72185911e-01, 0.00000000e+00],
        [1.00000000e+00, 8.57661583e-01, 0.00000000e+00],
        [1.00000000e+00, 8.43137255e-01, 0.00000000e+00],
        [1.00000000e+00, 8.28612927e-01, 0.00000000e+00],
        [1.00000000e+00, 8.14088598e-01, 0.00000000e+00],
        [1.00000000e+00, 7.99564270e-01, 0.00000000e+00],
        [1.00000000e+00, 7.85039942e-01, 0.00000000e+00],
        [1.00000000e+00, 7.70515614e-01, 0.00000000e+00],
        [1.00000000e+00, 7.55991285e-01, 0.00000000e+00],
        [1.00000000e+00, 7.41466957e-01, 0.00000000e+00],
        [1.00000000e+00, 7.26942629e-01, 0.00000000e+00],
        [1.00000000e+00, 7.12418301e-01, 0.00000000e+00],
        [1.00000000e+00, 6.97893972e-01, 0.00000000e+00],
        [1.00000000e+00, 6.83369644e-01, 0.00000000e+00],
        [1.00000000e+00, 6.68845316e-01, 0.00000000e+00],
        [1.00000000e+00, 6.54320988e-01, 0.00000000e+00],
        [1.00000000e+00, 6.39796659e-01, 0.00000000e+00],
        [1.00000000e+00, 6.25272331e-01, 0.00000000e+00],
        [1.00000000e+00, 6.10748003e-01, 0.00000000e+00],
        [1.00000000e+00, 5.96223675e-01, 0.00000000e+00],
        [1.00000000e+00, 5.81699346e-01, 0.00000000e+00],
        [1.00000000e+00, 5.67175018e-01, 0.00000000e+00],
        [1.00000000e+00, 5.52650690e-01, 0.00000000e+00],
        [1.00000000e+00, 5.38126362e-01, 0.00000000e+00],
        [1.00000000e+00, 5.23602033e-01, 0.00000000e+00],
        [1.00000000e+00, 5.09077705e-01, 0.00000000e+00],
        [1.00000000e+00, 4.94553377e-01, 0.00000000e+00],
        [1.00000000e+00, 4.80029049e-01, 0.00000000e+00],
        [1.00000000e+00, 4.65504720e-01, 0.00000000e+00],
        [1.00000000e+00, 4.50980392e-01, 0.00000000e+00],
        [1.00000000e+00, 4.36456064e-01, 0.00000000e+00],
        [1.00000000e+00, 4.21931736e-01, 0.00000000e+00],
        [1.00000000e+00, 4.07407407e-01, 0.00000000e+00],
        [1.00000000e+00, 3.92883079e-01, 0.00000000e+00],
        [1.00000000e+00, 3.78358751e-01, 0.00000000e+00],
        [1.00000000e+00, 3.63834423e-01, 0.00000000e+00],
        [1.00000000e+00, 3.49310094e-01, 0.00000000e+00],
        [1.00000000e+00, 3.34785766e-01, 0.00000000e+00],
        [1.00000000e+00, 3.20261438e-01, 0.00000000e+00],
        [1.00000000e+00, 3.05737110e-01, 0.00000000e+00],
        [1.00000000e+00, 2.91212781e-01, 0.00000000e+00],
        [1.00000000e+00, 2.76688453e-01, 0.00000000e+00],
        [1.00000000e+00, 2.62164125e-01, 0.00000000e+00],
        [1.00000000e+00, 2.47639797e-01, 0.00000000e+00],
        [1.00000000e+00, 2.33115468e-01, 0.00000000e+00],
        [1.00000000e+00, 2.18591140e-01, 0.00000000e+00],
        [1.00000000e+00, 2.04066812e-01, 0.00000000e+00],
        [1.00000000e+00, 1.89542484e-01, 0.00000000e+00],
        [1.00000000e+00, 1.75018155e-01, 0.00000000e+00],
        [1.00000000e+00, 1.60493827e-01, 0.00000000e+00],
        [1.00000000e+00, 1.45969499e-01, 0.00000000e+00],
        [1.00000000e+00, 1.31445171e-01, 0.00000000e+00],
        [1.00000000e+00, 1.16920842e-01, 0.00000000e+00],
        [1.00000000e+00, 1.02396514e-01, 0.00000000e+00],
        [1.00000000e+00, 8.78721859e-02, 0.00000000e+00],
        [9.99108734e-01, 7.33478577e-02, 0.00000000e+00],
        [9.81283422e-01, 5.88235294e-02, 0.00000000e+00],
        [9.63458111e-01, 4.42992012e-02, 0.00000000e+00],
        [9.45632799e-01, 2.97748729e-02, 0.00000000e+00],
        [9.27807487e-01, 1.52505447e-02, 0.00000000e+00],
        [9.09982175e-01, 7.26216412e-04, 0.00000000e+00],
        [8.92156863e-01, 0.00000000e+00, 0.00000000e+00],
        [8.74331551e-01, 0.00000000e+00, 0.00000000e+00],
        [8.56506239e-01, 0.00000000e+00, 0.00000000e+00],
        [8.38680927e-01, 0.00000000e+00, 0.00000000e+00],
        [8.20855615e-01, 0.00000000e+00, 0.00000000e+00],
        [8.03030303e-01, 0.00000000e+00, 0.00000000e+00],
        [7.85204991e-01, 0.00000000e+00, 0.00000000e+00],
        [7.67379679e-01, 0.00000000e+00, 0.00000000e+00],
        [7.49554367e-01, 0.00000000e+00, 0.00000000e+00],
        [7.31729055e-01, 0.00000000e+00, 0.00000000e+00],
        [7.13903743e-01, 0.00000000e+00, 0.00000000e+00],
        [6.96078431e-01, 0.00000000e+00, 0.00000000e+00],
        [6.78253119e-01, 0.00000000e+00, 0.00000000e+00],
        [6.60427807e-01, 0.00000000e+00, 0.00000000e+00],
        [6.42602496e-01, 0.00000000e+00, 0.00000000e+00],
        [6.24777184e-01, 0.00000000e+00, 0.00000000e+00],
        [6.06951872e-01, 0.00000000e+00, 0.00000000e+00],
        [5.89126560e-01, 0.00000000e+00, 0.00000000e+00],
        [5.71301248e-01, 0.00000000e+00, 0.00000000e+00],
        [5.53475936e-01, 0.00000000e+00, 0.00000000e+00],
        [5.35650624e-01, 0.00000000e+00, 0.00000000e+00],
        [5.17825312e-01, 0.00000000e+00, 0.00000000e+00],
        [5.00000000e-01, 0.00000000e+00, 0.00000000e+00]]])*255
    jetColors = jetColors.astype(np.uint8)
    return jetColors